// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pl.Sas.Infrastructure.Data;

#nullable disable

namespace Pl.Sas.Scheduler.Migrations.MarketDb
{
    [DbContext(typeof(MarketDbContext))]
    [Migration("20220427152801_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pl.Sas.Core.Entities.Company", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<float>("Asset")
                        .HasColumnType("real");

                    b.Property<int>("BankNumberOfBranch")
                        .HasColumnType("int");

                    b.Property<float>("Beta")
                        .HasColumnType("real");

                    b.Property<float>("Bv")
                        .HasColumnType("real");

                    b.Property<float>("CharterCapital")
                        .HasColumnType("real");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte[]>("CompanyProfile")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("DilutedEps")
                        .HasColumnType("real");

                    b.Property<float>("DividendYield")
                        .HasColumnType("real");

                    b.Property<float>("Eps")
                        .HasColumnType("real");

                    b.Property<string>("Exchange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("FinanciallEverage")
                        .HasColumnType("real");

                    b.Property<float>("FirstPrice")
                        .HasColumnType("real");

                    b.Property<DateTime?>("FoundingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IndustryName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<float>("IssueShare")
                        .HasColumnType("real");

                    b.Property<float>("ListedValue")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ListingDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("MarketCap")
                        .HasColumnType("real");

                    b.Property<float>("Npl")
                        .HasColumnType("real");

                    b.Property<int>("NumberOfEmployee")
                        .HasColumnType("int");

                    b.Property<float>("Pb")
                        .HasColumnType("real");

                    b.Property<float>("Pe")
                        .HasColumnType("real");

                    b.Property<float>("Profit")
                        .HasColumnType("real");

                    b.Property<float>("Roa")
                        .HasColumnType("real");

                    b.Property<float>("Roe")
                        .HasColumnType("real");

                    b.Property<string>("Sector")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<float>("SharesOutStanding")
                        .HasColumnType("real");

                    b.Property<string>("Subsector")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SubsectorCode")
                        .IsRequired()
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<string>("Supersector")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<float>("TotalRevenue")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Symbol", "SubsectorCode");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Pl.Sas.Core.Entities.CorporateAction", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Description")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("EventCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("EventListCode")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EventTitle")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Exchange")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("ExrightDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PublicDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Ratio")
                        .HasColumnType("real");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("EventCode");

                    b.HasIndex("EventCode", "Symbol", "Exchange");

                    b.ToTable("CorporateActions");
                });

            modelBuilder.Entity("Pl.Sas.Core.Entities.FiinEvaluate", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<string>("ComGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ControlStatusCode")
                        .HasColumnType("int");

                    b.Property<string>("ControlStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Growth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IcbCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IcbRank")
                        .HasColumnType("int");

                    b.Property<int>("IcbTotalRanked")
                        .HasColumnType("int");

                    b.Property<int>("IndexRank")
                        .HasColumnType("int");

                    b.Property<int>("IndexTotalRanked")
                        .HasColumnType("int");

                    b.Property<string>("Momentum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vgm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("FiinEvaluates");
                });

            modelBuilder.Entity("Pl.Sas.Core.Entities.FinancialGrowth", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<float>("Asset")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("OwnerCapital")
                        .HasColumnType("real");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("ValuePershare")
                        .HasColumnType("real");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("FinancialGrowths");
                });

            modelBuilder.Entity("Pl.Sas.Core.Entities.FinancialIndicator", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("CurrentRatio")
                        .HasColumnType("real");

                    b.Property<float>("DebtAsset")
                        .HasColumnType("real");

                    b.Property<float>("DebtEquity")
                        .HasColumnType("real");

                    b.Property<float>("DilutedEps")
                        .HasColumnType("real");

                    b.Property<float>("DilutedPe")
                        .HasColumnType("real");

                    b.Property<float>("Eps")
                        .HasColumnType("real");

                    b.Property<float>("GrossProfitMargin")
                        .HasColumnType("real");

                    b.Property<int>("LengthReport")
                        .HasColumnType("int");

                    b.Property<float>("NetProfitMargin")
                        .HasColumnType("real");

                    b.Property<float>("Pb")
                        .HasColumnType("real");

                    b.Property<float>("Pe")
                        .HasColumnType("real");

                    b.Property<float>("Profit")
                        .HasColumnType("real");

                    b.Property<float>("QuickRatio")
                        .HasColumnType("real");

                    b.Property<float>("Revenue")
                        .HasColumnType("real");

                    b.Property<float>("Roa")
                        .HasColumnType("real");

                    b.Property<float>("Roe")
                        .HasColumnType("real");

                    b.Property<float>("Roic")
                        .HasColumnType("real");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("YearReport")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("FinancialIndicators");
                });

            modelBuilder.Entity("Pl.Sas.Core.Entities.Industry", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("Pl.Sas.Core.Entities.Leadership", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PositionLevel")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("Leaderships");
                });

            modelBuilder.Entity("Pl.Sas.Core.Entities.Schedule", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<bool>("Activated")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ActiveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataKey")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsError")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("OptionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActiveTime");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Pl.Sas.Core.Entities.Stock", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exchange")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("FullName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Symbol", "Type");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Pl.Sas.Core.Entities.StockPrice", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<float>("AveragePrice")
                        .HasColumnType("real");

                    b.Property<float>("CeilingPrice")
                        .HasColumnType("real");

                    b.Property<float>("ClosePrice")
                        .HasColumnType("real");

                    b.Property<float>("ClosePriceAdjusted")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("FloorPrice")
                        .HasColumnType("real");

                    b.Property<float>("ForeignBuyValTotal")
                        .HasColumnType("real");

                    b.Property<float>("ForeignBuyVolTotal")
                        .HasColumnType("real");

                    b.Property<float>("ForeignCurrentRoom")
                        .HasColumnType("real");

                    b.Property<float>("ForeignSellValTotal")
                        .HasColumnType("real");

                    b.Property<float>("ForeignSellVolTotal")
                        .HasColumnType("real");

                    b.Property<float>("HighestPrice")
                        .HasColumnType("real");

                    b.Property<float>("LowestPrice")
                        .HasColumnType("real");

                    b.Property<float>("NetBuySellVal")
                        .HasColumnType("real");

                    b.Property<float>("NetBuySellVol")
                        .HasColumnType("real");

                    b.Property<float>("OpenPrice")
                        .HasColumnType("real");

                    b.Property<float>("PerPriceChange")
                        .HasColumnType("real");

                    b.Property<float>("PriceChange")
                        .HasColumnType("real");

                    b.Property<float>("RefPrice")
                        .HasColumnType("real");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<float>("TotalBuyTrade")
                        .HasColumnType("real");

                    b.Property<float>("TotalBuyTradeVol")
                        .HasColumnType("real");

                    b.Property<float>("TotalDealVal")
                        .HasColumnType("real");

                    b.Property<float>("TotalDealVol")
                        .HasColumnType("real");

                    b.Property<float>("TotalMatchVal")
                        .HasColumnType("real");

                    b.Property<float>("TotalMatchVol")
                        .HasColumnType("real");

                    b.Property<float>("TotalSellTrade")
                        .HasColumnType("real");

                    b.Property<float>("TotalSellTradeVol")
                        .HasColumnType("real");

                    b.Property<DateTime>("TradingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.HasIndex("TradingDate");

                    b.HasIndex("Symbol", "TradingDate");

                    b.ToTable("StockPrices");
                });

            modelBuilder.Entity("Pl.Sas.Core.Entities.StockRecommendation", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<string>("Analyst")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<float>("AvgTargetPrice")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firm")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("ReportPrice")
                        .HasColumnType("real");

                    b.Property<string>("Source")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<float>("TargetPrice")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Symbol", "Analyst", "ReportDate");

                    b.ToTable("StockRecommendations");
                });

            modelBuilder.Entity("Pl.Sas.Core.Entities.VndStockScore", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriteriaCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("CriteriaName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("CriteriaType")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("FiscalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Locale")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("ModelCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<float>("Point")
                        .HasColumnType("real");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Symbol");

                    b.ToTable("VndStockScores");
                });
#pragma warning restore 612, 618
        }
    }
}
