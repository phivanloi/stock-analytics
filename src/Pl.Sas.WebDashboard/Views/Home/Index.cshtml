@model MarketViewModel
@{
    ViewData["Title"] = "Thông tin thị trường";
    ViewData["ActiveMenu"] = "baocaothitruong";
}
<section class="content table-responsive" style="padding:10px; color:#e2e2e2">
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <select id="zone" onchange="LoadMarket()" class="form-control seach-control">
                    @if (Model.UserHasFollowStock)
                    {
                        <option value="me" selected="selected">Quan tâm</option>
                        <option value="all">Toàn thị trường và bỏ thanh khoản nhỏ hơn 10k cổ</option>
                    }
                    else
                    {
                        <option value="all" selected="selected">Toàn thị trường và bỏ thanh khoản nhỏ hơn 10k cổ</option>
                        <option value="me">Quan tâm</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <select id="ordinal" onchange="LoadMarket()" class="form-control seach-control">
                    <option value="ddgdn">Điểm đánh giá DN giảm dần</option>
                    <option selected="selected" value="klk">Khối lượng khớp giảm dần</option>
                    <option value="td1p">Giá thay đổi 1 phiên giảm dần</option>
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <select id="exchange" onchange="LoadMarket()" class="form-control seach-control">
                    @if (Model.UserHasFollowStock)
                    {
                        <option value="" selected="selected">Tất cả sàn niêm yết</option>
                    }
                    else
                    {
                        <option value="">Tất cả sàn niêm yết</option>
                    }
                    @foreach (var exchange in Model.Exchanges)
                    {
                        if (exchange == "HOSE" && !Model.UserHasFollowStock)
                        {
                            <option value="@exchange" selected="selected">@exchange</option>
                        }
                        else
                        {
                            <option value="@exchange">@exchange</option>
                        }
                    }
                </select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <select id="industry" onchange="LoadMarket()" class="form-control seach-control">
                    <option value="">Tất cả lĩnh vực</option>
                    @foreach (var industry in Model.IndustryCodes)
                    {
                        <option value="@industry.Key">@industry.Value</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="input-group">
                <input type="text" class="form-control seach-control" id="code" placeholder="Mã">
                <div class="input-group-append">
                    <button type="button" onclick="LoadMarket()" class="btn btn-primary" style="max-height:33px; border-color:#aabcbb; line-height:19px"><i class="fas fa-search"></i></button>
                </div>
            </div>
        </div>
    </div>
    <table class="table table-bordered table-hover market">
        <thead>
            <tr class="t-w t-c">
                <td rowspan="2" title="Tên doanh nghiệp - lĩnh vực hoạt động" id="number-row">Mã</td>
                <td colspan="6" title="Điểm đánh giá doanh nghiệp và các chỉ số tài chính hiện tại của doanh nghiệp">Doanh nghiệp</td>
                <td colspan="2" title="Điểm số dòng tiền ngành và dòng tiền của cổ phiếu">Dòng tiền</td>
                <td colspan="10" title="Điểm đánh giá tăng trưởng thị giá và phân tích kỹ thuật">Kỹ thuật</td>
                <td colspan="7" title="Kết quả các phương pháp khi cho đầu tư từ @Pl.Sas.Core.Constants.StartTime.ToString("dd/MM/yyyy") và đánh giá mua/bán">Khuyến nghị</td>
            </tr>
            <tr class="t-c t-w">
                <td title="Tổng hợp điểm đánh giá của doanh nghiệp">ĐCP</td>
                <td title="Chỉ số EPS, EPS = (LNST-cổ tức của cổ phiếu ưu đãi) / (KLCP lưu hành bình quân trong kỳ)">EPS</td>
                <td title="Chỉ số P/E, P/E = giá cổ phiếu / EPS">P/E</td>
                <td title="Return On Equity (ROE) hay lợi nhuận trên vốn chủ sở hữu là chỉ số đo lường mức độ hiệu quả của việc sử dụng vốn chủ sở hữu trong doanh nghiệp.">ROE</td>
                <td title="% lợi nhuận quý gần nhất">LNQ</td>
                <td title="% trung bình lợi nhuận 3 năm gần nhất">LNN</td>

                <td title="Điểm đánh giá dòng tiền ngành">DTN</td>
                <td title="Điểm đánh giá dòng tiền cổ phiếu">DTC</td>

                <td title="Chỉ số beta">Beta</td>
                <td title="Chỉ số stoch Rsi 14 phiên">Rsi</td>
                <td title="Giá kháng cự">GKC</td>
                <td title="Giá hỗ trợ">GHT</td>
                <td title="Khối lượng khớp lệnh phiên trước và % so với bình quân 3,5,10 phiên trước">KL khớp</td>
                <td title="Giá đóng của phiên giao mới nhất">Giá</td>
                <td title="% biến động giá trong 1 phiên">%+-</td>
                <td title="% biến động giá trong 5 phiên">%5P</td>
                <td title="% biến động giá trong 10 phiên">%10P</td>
                <td title="% biến động giá trong 30 phiên">%30P</td>

                <td title="% lợi nhuận của phương pháp mua và giữ">LNMG</td>
                <td title="% Lợi nhuận của phương pháp ngắn hạn phù hợp với beta cao">NH</td>
                <td title="% Lợi nhuận của phương pháp trung hạn phù hợp với beta thấp">TH</td>
                <td title="% Lợi nhuận của phương pháp thử nghiệm" id="compete-result">TN</td>
                <td title="Khuyến nghị theo phương pháp ngắn hạn,T là tiền, C là cổ, T(10) là giữ tiền được 10 phiên, C(10,3.4%) là giữ cổ phiếu được 10 phiên lãi 3,4%">KNNH</td>
                <td title="Khuyến nghị theo phương pháp trung hạn,T là tiền, C là cổ, T(10) là giữ tiền được 10 phiên, C(10,3.4%) là giữ cổ phiếu được 10 phiên lãi 3,4%">KNTH</td>
                <td title="Khuyến nghị theo phương pháp thử nghiệm,T là tiền, C là cổ, T(10) là giữ tiền được 10 phiên, C(10,3.4%) là giữ cổ phiếu được 10 phiên lãi 3,4%">KNTN</td>
            </tr>
        </thead>
        <tbody id="user-invest-table-body">
            <tr>
                <td colspan="26" class="text-center"><p class="fas fa-sync-alt fa-spin"></p></td>
            </tr>
        </tbody>
    </table>
</section>
@section Scripts{
    <script>
        $(function() {
            const srConnection = new signalR.HubConnectionBuilder().withUrl("/stockrealtime").withAutomaticReconnect().build();
            srConnection.on("UpdateStockView", () => { LoadMarket(); });
            srConnection.on("UpdateRealtimeView", (view) => {
                setContent('#' + view.symbol + ' .klht', view.klht, view.klhtCss);
                setContent('#' + view.symbol + ' .ght', view.ght, view.ghtCss);
                setContent('#' + view.symbol + ' .bd2', view.bd2, view.bd2Css);
                setContent('#' + view.symbol + ' .bd5', view.bd5, view.bd5Css);
                setContent('#' + view.symbol + ' .bd10', view.bd10, view.bd10Css);
                setContent('#' + view.symbol + ' .bd30', view.bd30, view.bd30Css, '60 phiên: ' + view.bd60);
                setContent('#' + view.symbol + ' .rsi14', view.rsi14, view.rsi14Css);

                setContent('#' + view.symbol + ' .lnmg', view.lnmg, view.lnmgCss);
                setContent('#' + view.symbol + ' .lnnh', view.lnnh, view.lnnhCss);
                setContent('#' + view.symbol + ' .lnth', view.lnth, view.lnthCss);
                setContent('#' + view.symbol + ' .lntn', view.lntn, view.lntnCss);
                setContent('#' + view.symbol + ' .knnh', view.knnh, view.knnhCss);
                setContent('#' + view.symbol + ' .knth', view.knth, view.knthCss);
                setContent('#' + view.symbol + ' .kntn', view.kntn, view.kntnCss);
            });
            srConnection.on("UpdateIndexView", (indexview) => {
                setContent('.dji', indexview.dji, indexview.djiCss);
                setContent('.nasdaq', indexview.nasdaq, indexview.nasdaqCss);
                setContent('.sp500', indexview.sp500, indexview.sp500Css);
                setContent('.ftse100', indexview.ftse100, indexview.ftse100Css);
                setContent('.dax', indexview.dax, indexview.daxCss);
                setContent('.cac40', indexview.cac40, indexview.cac40Css);
                setContent('.kospi', indexview.kospi, indexview.kospiCss);
                setContent('.n225', indexview.n225, indexview.n225Css);
                setContent('.shanghai', indexview.shanghai, indexview.shanghaiCss);
                setContent('.hangseng', indexview.hangseng, indexview.hangsengCss);
                setContent('.vnindex', indexview.vnindex, indexview.vnindexCss);
                setContent('.vnindexValue', indexview.vnindexValue, 'vnindexValue');
                setContent('.vnindexPe', indexview.vnindexPe, 'vnindexPe');
                setContent('.vnindexPb', indexview.vnindexPb, 'vnindexPb');
                setContent('.kcvnindex', indexview.kcVnindex, 'kcvnindex');
                setContent('.htvnindex', indexview.htVnindex, 'htvnindex');
            });

            async function srStartListen() {
                try {
                    await srConnection.start();
                    console.log("Realtime stock connected.");
                } catch (err) {
                    console.log(err);
                    setTimeout(srStartListen, 5000);
                }
            };
            srConnection.onclose(async () => { await srStartListen(); });
            srStartListen();

            function setContent(selecter, value, css, title) {
                var currentText = $(selecter).text();
                if (currentText != value) {
                    $(selecter).text(value);
                    $(selecter).prop('class', css + ' c-dtac');
                    if (title) {
                        $(selecter).prop('title', title);
                    }
                    setTimeout(function() {
                        $(selecter).removeClass('c-dtac');
                    }, 600);
                }
            }

            $('#code').keypress(function(e) {
                if (e.which == 13) {
                    LoadMarket();
                }
            });
            LoadMarket();
        });

        function LoadMarket() {
            var scrollTop = window.pageYOffset || document.documentElement.scrollTop;
            $('#user-invest-table-body').html('<tr><td colspan="26" class="text-center"><p class="fas fa-sync-alt fa-spin"></p></td></tr>');
            var postData = JSON.stringify({
                Ordinal: $('#ordinal').val(),
                IndustryCode: $('#industry').val(),
                Exchange: $('#exchange').val(),
                Symbol: $('#code').val(),
                Zone: $('#zone').val()
            });
            $.ajax({
                type: "POST",
                contentType: "application/json",
                cache: false,
                data: postData,
                url: "/home/marketlist",
                success: function(html) {
                    if (html.length > 0) {
                        $('#user-invest-table-body').html(html);
                        $('#number-row').html($('#user-invest-table-body').children().length + '</br> Mã');
                        $('#compete-result').prop('title',$('#compete').val());
                        document.documentElement.scrollTop = document.body.scrollTop = scrollTop;
                    }
                    else {
                        setTimeout(LoadMarket, 5000);
                    }
                }
            });
        };
    </script>
}